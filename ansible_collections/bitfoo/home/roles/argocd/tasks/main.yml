- name: ARGOCD | Include argocd vars
  ansible.builtin.include_vars:
    file: main.yml

- name: ARGOCD | Get latest version
  ansible.builtin.uri:
    url: https://api.github.com/repos/argoproj/argo-cd/releases/latest
    headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
  register: argocd_latest_release_json
  check_mode: false

- name: ARGOCD | Get current installed version
  ansible.builtin.shell:
    cmd: "set -eo pipefail; {{ xdg_dirs_local_bin }}/argocd version --client --short | cut -d 'v' -f 2 | cut -d '+' -f 1"
  register: argocd_current_version_cmd
  changed_when: false
  failed_when: false
  check_mode: false

- name: ARGOCD | Register latest release version
  ansible.builtin.set_fact:
    argocd_latest_version: "{{ argocd_latest_release_json.json.tag_name.split('v')[1] }}"
    argocd_current_version: "{{ argocd_current_version_cmd.stdout | default('') }}"

- name: ARGOCD | Latest release version
  ansible.builtin.debug:
    var: argocd_latest_version

- name: ARGOCD | Current installed version
  ansible.builtin.debug:
    var: argocd_current_version

- name: ARGOCD | Install or Upgrade argocd
  when:
    - argocd_current_version != argocd_latest_version or argocd_force_install
  block:
    - name: ARGOCD | Create tmp directory
      ansible.builtin.tempfile:
        prefix: argocd_
        state: directory
      register: argocd_tmp_dir
      changed_when: false
      check_mode: false

    - name: ARGOCD | Set release full name
      ansible.builtin.set_fact:
        argocd_full_release_name: "argocd-{{ argocd_os_arch[ansible_system][ansible_architecture] }}"
      check_mode: false

    - name: ARGOCD | Download latest release
      ansible.builtin.get_url:
        url: "https://github.com/argoproj/argo-cd/releases/download/\
              v{{ argocd_latest_version }}/{{ argocd_full_release_name }}"
        dest: "{{ argocd_tmp_dir.path }}"
        headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
        mode: "0750"
      check_mode: false
      register: argocd_downloaded_release

    - name: ARGOCD | Copy binary
      ansible.builtin.copy:
        src: "{{ argocd_tmp_dir.path }}/{{ argocd_full_release_name }}"
        dest: "{{ xdg_dirs_local_bin }}/argocd"
        mode: "0750"

    - name: ARGOCD | Generate shell completion
      ansible.builtin.command:
        cmd: "{{ argocd_tmp_dir.path }}/{{ argocd_full_release_name }} completion {{ item }}"
      register: argocd_shell_completions
      changed_when: false
      check_mode: false
      loop:
        - bash
        - zsh

    - name: ARGOCD | Copy shell completion
      ansible.builtin.copy:
        content: "{{ item.stdout }}"
        dest: "{{ xdg_dirs_config }}/{{ item.item }}/completions/_argocd.{{ item.item }}"
        mode: "0640"
      diff: false
      loop: "{{ argocd_shell_completions.results }}"
      loop_control:
        label: "Completion for {{ item.item }}"
  always:
    - name: ARGOCD | Ensure tmp directory is absent
      ansible.builtin.file:
        dest: "{{ argocd_tmp_dir.path }}"
        state: absent
      no_log: true
