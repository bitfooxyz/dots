- name: FZF | Include fzf vars
  ansible.builtin.include_vars:
    file: main.yml

- name: FZF | Include os dependent vars
  ansible.builtin.include_vars:
    file: "{{ ansible_distribution | lower }}.yml"

- name: FZF | Get latest version
  ansible.builtin.uri:
    url: https://api.github.com/repos/junegunn/fzf/releases/latest
    headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
  register: fzf_latest_release_json
  check_mode: false

- name: FZF | Get current installed version
  ansible.builtin.command:
    cmd: "{{ xdg_dirs_local_bin }}/fzf --version"
  register: fzf_current_version_cmd
  changed_when: false
  failed_when: false
  check_mode: false

- name: FZF | Register latest release version
  ansible.builtin.set_fact:
    fzf_latest_version: "{{ fzf_latest_release_json.json.tag_name.split('v')[1] }}"
    fzf_current_version: "{{ fzf_current_version_cmd.stdout.split(' ')[0] | default('') }}"

- name: FZF | Latest release version
  ansible.builtin.debug:
    var: fzf_latest_version

- name: FZF | Current installed version
  ansible.builtin.debug:
    var: fzf_current_version

- name: FZF | Install or Upgrade fzf
  when:
    - fzf_current_version != fzf_latest_version or fzf_force_install
  block:
    - name: FZF | Create tmp directory
      ansible.builtin.tempfile:
        prefix: fzf_
        state: directory
      register: fzf_tmp_dir
      check_mode: false

    - name: FZF | Set release full name
      ansible.builtin.set_fact:
        fzf_full_release_name: "fzf-{{ fzf_latest_version }}-{{ fzf_os_arch[ansible_system][ansible_architecture] }}"
      check_mode: false

    - name: FZF | Download checksum file
      ansible.builtin.uri:
        url: "https://github.com/junegunn/fzf/releases/download/v{{ fzf_latest_version }}/fzf_{{ fzf_latest_version }}_checksums.txt"
        headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
        return_content: true
      register: fzf_checksums
      changed_when: false
      check_mode: false

    - name: FZF | Set checksum for system and architecture archive
      ansible.builtin.set_fact:
        fzf_file_checksum: "{{ fzf_checksums.content | regex_findall('.*' + fzf_full_release_name + '.*') | first | split(' ') | first }}"
      check_mode: false

    - name: FZF | Download latest release
      ansible.builtin.get_url:
        url: "https://github.com/junegunn/fzf/releases/download/\
              v{{ fzf_latest_version }}/{{ fzf_full_release_name }}.tar.gz"
        dest: "{{ fzf_tmp_dir.path }}"
        mode: "0640"
        headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
        checksum: "sha256:{{ fzf_file_checksum }}"
      register: fzf_downloaded_release
      check_mode: false

    - name: FZF | Unarchive downloaded archive
      ansible.builtin.unarchive:
        src: "{{ fzf_downloaded_release.dest }}"
        dest: "{{ fzf_tmp_dir.path }}"
      register: fzf_unarchived_release
      check_mode: false

    - name: FZF | Copy fzf binary
      ansible.builtin.copy:
        src: "{{ fzf_tmp_dir.path }}/fzf"
        dest: "{{ xdg_dirs_local_bin }}/fzf"
        mode: "0750"

    - name: FZF | Download manpages
      ansible.builtin.uri:
        url: "https://raw.githubusercontent.com/junegunn/fzf/v{{ fzf_latest_version }}/man/man1/{{ item }}"
        headers: "{{ github_api_headers | to_json(vault_to_text=true) }}"
        return_content: true
      register: fzf_manpages
      check_mode: false
      loop:
        - fzf.1
        - fzf-tmux.1

    - name: FZF | Copy manpages
      ansible.builtin.copy:
        content: "{{ item.content }}"
        dest: "{{ xdg_dirs_local_share_man }}/man1/{{ item.item }}"
        mode: "0750"
      loop: "{{ fzf_manpages.results }}"
      loop_control:
        label: "{{ item.item }}"
  always:
    - name: FZF | Ensure tmp directory is absent
      ansible.builtin.file:
        dest: "{{ fzf_tmp_dir.path }}"
        state: absent
      no_log: true

- name: FZF | Install preview.sh Linux dependencies
  ansible.builtin.package:
    name: "{{ fzf_packages }}"
    state: present
  become: true
  when: ansible_system == "Linux"

- name: FZF | Install preview.sh MacOS dependencies
  ansible.builtin.package:
    name: "{{ fzf_packages }}"
    state: present
  when: ansible_system == "Darwin"

- name: FZF | Create config directory
  ansible.builtin.file:
    path: "{{ xdg_dirs_config }}/fzf"
    state: directory
    mode: "0750"

- name: FZF | Ensure preview.sh exists
  ansible.builtin.copy:
    src: preview.sh
    dest: "{{ xdg_dirs_config }}/fzf/preview.sh"
    mode: "0750"

- name: FZF | Link shell plugin
  ansible.builtin.file:
    src: "{{ role_path }}/files/fzf.sh"
    dest: "{{ xdg_dirs_config }}/{{ item }}/plugins/fzf.sh"
    state: link
    force: true
  loop:
    - bash
    - zsh
