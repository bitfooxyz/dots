---
- name: SSH_CLIENT | Import vars
  ansible.builtin.include_vars:
    file: main.yml

- name: SSH_CLIENT | Import OS dependent vars
  ansible.builtin.include_vars:
    file: "{{ ansible_distribution | lower }}.yml"

- name: SSH_CLIENT | Install ssh-client on Linux
  ansible.builtin.package:
    name: "{{ ssh_client_packages }}"
    state: present
  become: true
  when: ansible_system == "Linux"

- name: SSH_CLIENT | Install ssh-client on MacOS
  community.general.homebrew:
    name: "{{ ssh_client_packages }}"
    state: present
  when: ansible_system == "Darwin"

- name: SSH_CLIENT | Ensure ~/.ssh directories exists
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/{{ item }}"
    state: directory
    mode: "0750"
  loop:
    - .ssh
    - .ssh/control

- name: SSH_CLIENT | Link ssh client config file
  ansible.builtin.file:
    src: "{{ role_path }}/files/config"
    dest: "{{ ansible_user_dir }}/.ssh/config"
    state: link
    force: true

- name: SSH_CLIENT | Create client config
  ansible.builtin.template:
    src: client.config.j2
    dest: "{{ ansible_user_dir }}/.ssh/client.config"
    mode: "0640"

- name: SSH_CLIENT | Copy SSH private keys
  ansible.builtin.copy:
    content: "{{ item.value.private_key }}"
    dest: "{{ ansible_user_dir }}/.ssh/{{ item.key }}"
    mode: "0600"
  loop: "{{ ssh_client_keys | dict2items }}"
  no_log: true

- name: SSH_CLIENT | Copy SSH public keys
  ansible.builtin.copy:
    content: "{{ item.value.public_key }}"
    dest: "{{ ansible_user_dir }}/.ssh/{{ item.key }}.pub"
    mode: "0600"
  loop: "{{ ssh_client_keys | dict2items }}"
  when:
    - item.value.public_key is defined
    - item.value.public_key != ""
  no_log: true
